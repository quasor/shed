<% prj ||= params[:project] %>
<% prj ||= params[:parent_id] %>
<style type="text/css" media="screen">
  .running #timer {background-color: #CCFFBF; border: solid 1px #2AB400;height: 24px;}
	#timer {text-align:right; padding: 0px; border: 1px solid #B42A00; background-color: #FFCEBF; margin:0px;}
	#ttimer #timer-display {font: bold 32px arial, sans-serif; letter-spacing: -1px; line-height: 28px; color: #333}
	#ttimer #timer-display small {font-size: 14px; letter-spacing: 0}
	#ttimer #total-display {background-color: #FF8D6F; padding: 4px 2px 2px 2px; text-align: left; font: bold 16px arial, sans-serif; line-height: 11px}
	#ttimer #total-display label {font: normal 10px arial; line-height: 8px; padding-right: 3px}
	.running #timer #total-display {background-color: #8eff6f}
	body {overflow:auto;margin:0;padding:0;} 
	.completed img.item {
		background: transparent;
		height:20px;
		width:20px;
	}
	.lirow {height:2.0em;font-size:13px;}
	body {background-color:#A9AEB7;}
</style>

<div style="position:relative;top:36px;" id="mytasks">			
		<table border="0" cellspacing="0" cellpadding="0" width="100%" height="100%" class="appcanvas">
			<tr>
				<td id="projects" valign="top">
			<h2>Active Projects</h2>
			<% unless params[:project].blank? && params[:release].blank?%>
				<%= link_to("All Projects", user_path(current_user), :class => "project") %>
			<% else %>
				<span class="project current">All Projects</span>
			<% end %>
			<% for project in Project.find @project_ids%>
			<%= link_to_unless_current(project.title, user_path(current_user, :project => project.id), :class => "project") do 
					"<span class=\"project current\">#{project.title}</span>"
				end
				%>
			<% end %>
			<hr>
			<% for release in Release.find(:all, :order => "due desc") %>
			<%= link_to_unless_current(release.title, user_path(current_user, :release => release.id), :class => "release") do
			  "<span class=\"release current\">#{release.title}</span>"			
			 end %>
			<% for project in release.children%>
			<%= link_to_unless_current(project.title, user_path(current_user, :project => project.id), :class => "project") do 
					"<span class=\"project current\">#{project.title}</span>"
				end
				%>
			<% end %>
			<% end %>
			<%= link_to("Completed Projects", user_path(current_user), :class => "project logbook") %>
			
		</td><td id="tasks" valign="top">
						
			<p id="notice"></p>
			<% content_for :button_bar do %>
			<%= link_to_remote "  New Task", :url => new_task_path(:parent_id => prj), :html => {:id=>'new-task-button', :class => 'button_link', :title => 'New Task', :style => 'margin-bottom:2em'} -%>
			<% end %>
			<div class="inline_edit" id="edit_task"></div>
			<ul id="taskList">
			<%= render :partial => 'tasks/task', :collection => @tasks %>
			</ul>
		</td>
		</tr>
		</table>
</div>
<%= periodically_call_remote(:url => {:action => 'update_ticker'},:method => "get", :frequency => '60')%>
<script type="text/javascript" charset="utf-8">

var last_updated = new Number();

function startup(){
	$('.ui-resizable-handle').css('background-color','#ABABAB');
	
	$('#taskList').sortable({
		axis: "y",
		stop: function(e,ui) {
			$('#order').val( $('#taskList').sortable('serialize', {"key":''}));
			//alert($('#taskList').sortable('serialize', {"key":''}));
			<%= remote_function( :url => reorder_tasks_path, :with => "$('#taskList').sortable('serialize', {\"key\":''})",
			:before => "$('#flash').html('Saving Order...')") %>
		},
		start: function(e,ui) {
			$('.date-heading').remove();
		},
		items: 'li:not(.date-heading)',
		delay:500,
		
	});	
	$("#taskList").disableSelection();

	/*
	<% Project.all.each do |project| %>
	$('#taskList<%=project.id%>').selectable();	
	<% end%>
	*/
	
	$('#task_submit').hide();

  $('a.stopped').hover(function() {
    	$('img.stopped',this).addClass('stopped-hover');
  	}, function() {
    $('img.stopped',this).removeClass('stopped-hover');
  });
  $('a.started').hover(function() {
    	$('img.stopped',this).addClass('started-hover');
  	}, function() {
    $('img.stopped',this).removeClass('started-hover');
  });
	
	$(document).keydown( function( e ) {
	   if( e.which == 27) {  // escape, close box
	     $(".inline_edit").html('');
	     $(".task_label").show();
	   }
	 });

 	$(document).keydown( function( e ) {
 	   if( e.which == 27) {  // escape, close box
 	     $(".inline_edit").html('');
 	     $(".task_label").show();
 	   }
 	 });

   $(document).bind('keydown', 'ctrl+n', function(e)
   {
   	<%= remote_function(:url => new_task_path(:parent_id => prj)) %>;     
   	return false;
   }
   );
	
	<% unless current_user.active_interval.nil? %>
	last_updated = <%=current_user.active_interval.start.to_f.to_i * 1000%>;
	// createTimer();
	<% end %>
	// document.title = 'Timer';
	// do:
	<% prj ||= params[:project] %>
	<% prj ||= params[:parent_id] %>
	<% unless prj.blank? %>
	<% if !params[:new].blank? || @tasks.empty? %> 
	<%= remote_function(:url => new_task_path(:parent_id => prj)) %>
  <% end %>
  <% end %>
}


function leadingZero(x){
	y=(x>9)?x:'0'+x;
	return y;
}
if (!Date.now) {
    Date.now = function() {
        return (new Date()).getTime();
    };
}
function tick() {
		  d = Date.now();
//			console.log(d);
			if (d < last_updated)
			{
				last_updated = d;
			}
		  progress = Math.floor((d - last_updated) / 1000);
//			console.log(progress);
			days = Math.floor(progress / (60*60*24));
			hours = Math.floor(progress / (60*60) % 24);
			minutes = Math.floor((progress / 60) % (60));
			seconds = progress % 60;
			dstr = days > 0 ? (days + "d "): ""
			$("#timer-display").html(dstr + leadingZero(hours) + ":" + leadingZero(minutes) + '<small>.'+leadingZero(seconds)+'</small>');
			<% unless @task.nil? %>
			document.title = "<%=@task.title%> (" + leadingZero(hours) + ":" + leadingZero(minutes) + ")";
			<% end %>
   }
// 1230744744937
// 1230744705000
function createTimer()
{
	$('#timer').show();
	setInterval("tick()",1000);
}
</script>
